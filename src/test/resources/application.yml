---
security:
  user.password: fake
hdfs:
  superuser: hdfs
  userspace.chroot: /test/org/%{organization}/brokers/userspace/%{instance}
  configuration.path: ${hdfs.broker.configuration.path:fake}
  keytab.path: ${hdfs.broker.keytab.path:fake}
uaa:
  tokenUri: ${vcap.services.sso.credentials.tokenUri:fake}
  uri: ${vcap.services.sso.credentials.uaaUri:fake}
  clientId: ${hdfs.broker.uaa.client:fake}
  clientSecret: ${hdfs.broker.uaa.client.secret:fake}
group.mapping:
  url: ${hgm.url:fake}
  kerberos:
    principal: ${hgm.principal:fake}
    keytab.path: ${hdfs.keytab.path:fake}
  https:
    username: ${hgm.username:fake}
    password: ${hgm.password:fake}
store:
  path: ${broker.store.znode:/broker/hdfs}
  user: ${system.user:test}
  password: ${system.user.password:test1}
  keytabPath: ${system.user.keytab.path:test}
cf:
  catalog:
    serviceName: ${cf.catalog.servicename:hdfs}
    serviceId: ${cf.catalog.serviceid:hdfs}
    serviceDescription: fake_desc
    baseId: ${BASE_GUID:fakeBaseGuid}
    plans:
      - id: create-user-directory-plan
        name: create-user-directory
        description: fake
        free: true
      - id: get-user-directory-plan
        name: get-user-directory
        description: fake
        free: true
      - id: shared-plan
        name: shared
        description: shared
        free: true
        provisioning: true
      - id: encrypted-plan
        name: encrypted
        description: encrypted
        free: true
        provisioning: true
      - id: multitenant-plan
        name: multitenant
        description: multitenant
        free: true
        provisioning: false
    metadata:
      imageUrl: ${IMAGE_URL:}
